{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","type","name","onClick","Section","title","children","Notification","message","App","state","handleAddFeadback","event","feedbackName","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","goodVoices","totalVoices","percentageValue","Math","floor","this","percentage","Component","ReactDOM","render","document","getElementById"],"mappings":"yLAyBeA,MAtBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,oCACE,4BACE,qCAAWJ,GACX,wCAAcC,GACd,oCAAUC,GACV,sCAAYC,GACZ,kDAAwBC,EAAxB,QCYOC,MApBf,YAA+C,IAApBC,EAAmB,EAAnBA,gBACzB,OACE,oCACE,4BAAQC,KAAK,SAASC,KAAK,OAAOC,QAASH,GAA3C,QAGA,4BAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,GAA9C,WAGA,4BAAQC,KAAK,SAASC,KAAK,MAAMC,QAASH,GAA1C,SCKSI,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,iCACE,4BAAKD,GACJC,ICMQC,MAVf,YAAkC,IAAXC,EAAU,EAAVA,QACnB,OACI,2BAAIA,ICCSC,E,4MACnBC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPe,kBAAoB,SAAAC,GAClB,IAAMC,EAAeD,EAAME,OAAOZ,KAClC,EAAKa,UAAS,SAAAC,GAAS,sBACpBH,EAAeG,EAAUH,GAAgB,O,EAI9CI,mBAAqB,WAMnB,OALeC,OAAOC,OAAO,EAAKT,OACRU,QAAO,SAACC,EAAKC,GAErC,OADAD,GAAOC,IAEN,I,EAILC,gCAAkC,SAAA1B,GAChC,IAAM2B,EAAa,EAAKd,MAAMhB,KACxB+B,EAAc5B,EAChB6B,EAAkB,EAItB,OAHIF,GAA8B,IAAhBC,KAChBC,EAAkBC,KAAKC,MAAOJ,EAAaC,EAAe,MAErDC,G,uDAGC,IAAD,EACwBG,KAAKnB,MAA5BhB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQgC,KAAKZ,qBACba,EAAaD,KAAKN,gCAAgC1B,GACxD,OACE,oCACE,kBAAC,EAAD,CAASQ,MAAM,yBACb,kBAAC,EAAD,CAAiBL,gBAAiB6B,KAAKlB,qBAEzC,kBAAC,EAAD,CAASN,MAAM,cACF,IAAVR,EACC,kBAAC,EAAD,CAAcW,QAAQ,sBAEtB,kBAAC,EAAD,CACEd,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBgC,U,GAnDDC,aCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5299c555.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Netural: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedback: {positivePercentage}%</li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FeedbackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      <button type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.object,\r\n}\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <p>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Section from '../Section/Section';\r\nimport Notification from '../Notification/Notification';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleAddFeadback = event => {\r\n    const feedbackName = event.target.name;\r\n    this.setState(prevState => ({\r\n      [feedbackName]: prevState[feedbackName] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const values = Object.values(this.state);\r\n    const totalValue = values.reduce((acc, item) => {\r\n      acc += item;\r\n      return acc;\r\n    }, 0);\r\n    return totalValue;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = total => {\r\n    const goodVoices = this.state.good;\r\n    const totalVoices = total;\r\n    let percentageValue = 0;\r\n    if (goodVoices || totalVoices !== 0) {\r\n      percentageValue = Math.floor((goodVoices / totalVoices) * 100);\r\n    }\r\n    return percentageValue;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const percentage = this.countPositiveFeedbackPercentage(total);\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions onLeaveFeedback={this.handleAddFeadback} />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={percentage}\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}